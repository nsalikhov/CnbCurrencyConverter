<div id="exchange-market" class="exchange-rate-container">
	<div class="form-group">
		<label for="exchangeDate">Exchange date:</label>
		<div class="input-group">
			<input id="exchangeDate" type="text" class="form-control" data-bind="textInput: exchangeDate" />
			<span class="input-group-btn">
				<button id="sendMsg" class="btn btn-primary" data-bind="click: getExchangeRates, enable: !!exchangeDate()">Get exchange rates</button>
			</span>
		</div>
	</div>
	<div class="form-group" data-bind="visible: exchangeRates().length > 0">
		<label for="exchangeDate">Currency:</label>
		<div class="input-group">
			<select class="form-control" data-bind="value: $root.exchangeRate, options: exchangeRates, optionsText: 'currencyCode', optionsCaption: 'Select an item...'"></select>
		</div>
	</div>
	
	<div class="exchange-rate-table-container" data-bind="visible: exchangeRate">
		<h4>Exchange rate:</h4>
		<table class="table">
			<thead>
				<tr>
					<th class="col-md-3">Currency code</th>
					<th class="col-md-2">Amount</th>
					<th class="col-md-2">Rate</th>
					<th class="col-md-4">Date</th>
				</tr>
			</thead>
			<tbody>
				<tr data-bind="with: exchangeRate">
					<td data-bind="text: currencyCode"></td>
					<td data-bind="text: amount"></td>
					<td data-bind="text: rate"></td>
					<td data-bind="text: date"></td>
				</tr>
			</tbody>
		</table>
	</div>
</div>

@section scripts
{
	<script>
		$(function() {
			$("#exchangeDate")
				.datetimepicker({
					timepicker: false,
					format: "Y-m-d",
					minDate: "1991-01-01",
					maxDate: 0,
					mask: true,
					dayOfWeekStart: 1
				});

			var ExchangeRate = function(currencyCode, amount, rate, date) {
				this.currencyCode = currencyCode;
				this.amount = amount;
				this.rate = rate;
				this.date = date;
			}

			var ExchangeMarketViewModel = function() {
				var self = this;

				self.exchangeDate = ko.observable();
				self.exchangeRates = ko.observableArray();
				self.exchangeRate = ko.observable();

				self.getExchangeRates = function() {
					$.ajax({
						url: "@Url.Action("ExchangeRates")" + "?exchangeDate=" + self.exchangeDate(),
						contentType: "application/json",
						type: "GET",
						success: function (data) {
							self.exchangeRates.removeAll();

							for (var i = 0; i < data.length; i++) {
								var item = data[i];
								var date = new Date(parseInt(item.Date.substr(6)));

								self.exchangeRates.push(new ExchangeRate(
									item.CurrencyCode,
									item.Amount,
									item.Rate,
									date.toDateString()));
							}
						}
					});
				};
			};

			var viewModel = new ExchangeMarketViewModel();
			ko.applyBindings(viewModel, document.getElementById("exchange-market"));
		});
	</script>
}